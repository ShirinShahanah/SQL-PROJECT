CREATE DATABASE LIBRARY;
USE LIBRARY;

CREATE TABLE BRANCH (BRANCH_NO INT PRIMARY KEY,
MANAGER_ID INT,
BRANCH_ADDRESS VARCHAR(30),
CONTACT_NO INT);
	INSERT INTO BRANCH VALUES(101, 1, 'PAULS LIBRARY 09,MUMBAI', 123456789);
    INSERT INTO BRANCH VALUES(102, 2, 'CITYCENTRE LIBRARY ,KOLKATA', 346232456);
    INSERT INTO BRANCH VALUES(103, 3, 'CENTRAL LIBRARY,DELHI', 657984236);
    INSERT INTO BRANCH VALUES(104, 4, 'UNIVERSITY LIBRARY,BANGALORE', 875434564);
    INSERT INTO BRANCH VALUES(105, 5, 'JAWAHAR LAL LIBRARY,KOCHI', 876987605);
SELECT * FROM BRANCH;

CREATE TABLE EMPLOYEE (EMP_ID INT PRIMARY KEY,
EMP_NAME VARCHAR(20),
POSITION VARCHAR(25),
SALARY INT,
BRANCH_NO INT,
foreign key (BRANCH_NO) references BRANCH(BRANCH_NO));
	INSERT INTO EMPLOYEE VALUES(1, 'HINA KHAN', 'MANAGER', 75000, 101);
    INSERT INTO EMPLOYEE VALUES(2, 'SANIYA DAS', 'MANAGER', 65000, 102);
    INSERT INTO EMPLOYEE VALUES(3, 'AMIT SINGH', 'MANAGER', 70500, 103);
    INSERT INTO EMPLOYEE VALUES(4, 'ANWAR ASIF', 'MANAGER', 68000, 104);
    INSERT INTO EMPLOYEE VALUES(5, 'AYSHA HUSSAIN', 'MANAGER', 60550, 105);
    INSERT INTO EMPLOYEE VALUES(6, 'ZENNIE ZOYAL', 'ASSISTANT', 40000, 102);
    INSERT INTO EMPLOYEE VALUES(7, 'AYDIN SADATH', 'LIBRARIAN', 44000, 102);
    INSERT INTO EMPLOYEE VALUES(8, 'SHEEN MARYAM', 'PR SPECIALIST', 50500, 103);
    INSERT INTO EMPLOYEE VALUES(9, 'WAFAH KHAN', 'ASSISTANT', 43500, 105);
    INSERT INTO EMPLOYEE VALUES(10, 'ZOHAAN AMIN', 'ARCHIVIST', 35000, 102);
    INSERT INTO EMPLOYEE VALUES(11, 'IMRAN HAKIM', 'ADMINISTRATOR', 38000, 102);
    INSERT INTO EMPLOYEE VALUES(12, 'NATHASHA PHILIP', 'L TECHNICIAN', 25000, 102);
    INSERT INTO EMPLOYEE VALUES(13, 'AHAANA KRISHNA', 'LIBRARIAN', 60550, 104);
SELECT * FROM EMPLOYEE;

CREATE TABLE BOOKS (ISBN VARCHAR(50) PRIMARY KEY,
BOOK_TITLE VARCHAR(50),
CATEGORY VARCHAR(50),
RENTAL_PRICE INT,
STATUS enum('YES','NO'),
AUTHOR VARCHAR(50),
PUBLISHER VARCHAR(50));
	INSERT INTO BOOKS VALUES('123-45-678', 'FIVE POINT SOMEONE', 'FICTION', 30, 'YES', 'CHETAN BHAGAT', 'RUPA & CO');
    INSERT INTO BOOKS VALUES('234-67-890', 'CAN LOVE HAPPEN TWICE?', 'ROMANCE', 25, 'NO', 'RAVINDER SINGH', 'PENGUIN');
    INSERT INTO BOOKS VALUES('432-65-129', 'THE 3 MISTAKES OF MY LIFE', 'FICTION', 20, 'NO', 'CHETAN BHAGAT', 'RUPA & CO');
    INSERT INTO BOOKS VALUES('765-43-655', '2 STATES', 'ROMANCE', 25, 'YES', 'CHETAN BHAGAT', 'RUPA & CO');
    INSERT INTO BOOKS VALUES('908-23-088', 'LIKE IT HAPPENED YESTERDAY', 'MEMOIR', 35, 'YES', 'RAVINDER SNGH', 'PENGIUN');
    INSERT INTO BOOKS VALUES('234-98-602', 'IKIGAI', 'SELF-HELP', 30, 'YES', 'HECTOR & FRANCESC', 'PENGIUN');
    INSERT INTO BOOKS VALUES('769-09-651', 'EVERY TIME IT RAINS', 'ROMANCE', 22, 'NO', 'NIKITA SINGH', 'HARLEQUIN');
	INSERT INTO BOOKS VALUES('875-03-558', 'THAT NIGHT', 'HORROR', 25, 'YES', 'NIDHI UPADHYAY', 'EBURY PRESS');
	INSERT INTO BOOKS VALUES('124-35-678', 'THE GREAT INDIAN NOVEL', 'HISTORY', 25, 'YES', 'SHASHI THAROOR', 'PENGIUN');
SELECT * FROM BOOKS;
     
CREATE TABLE CUSTOMER (CUSTOMER_ID INT PRIMARY KEY,
CUSTOMER_NAME VARCHAR(20),
CUSTOMER_ADDRESS VARCHAR(50),
REG_DATE DATE);
	INSERT INTO CUSTOMER VALUES(1101, 'RAHUL', 'VIDHYA NAGAR, KSD', '2023-01-15');
	INSERT INTO CUSTOMER VALUES(1102, 'AYSHA', 'NELLIKUNNU, KASARAGOD', '2023-01-20');
    INSERT INTO CUSTOMER VALUES(1103, 'ANU', 'BANDIYOD, UPPALA', '2022-12-29');
    INSERT INTO CUSTOMER VALUES(1104, 'MEHFOOZ', '4TH MAIL, TOWN ROAD', '2022-03-19');
    INSERT INTO CUSTOMER VALUES(1105, 'SHIBILIN', 'FORT ROAD, TVM', '2021-10-13');
    INSERT INTO CUSTOMER VALUES(1106, 'NOORA', 'VYPIN, KOCHI', '2023-02-21');
    INSERT INTO CUSTOMER VALUES(1107, 'NITHYA', 'PAYYANUR, KANNUR', '2021-04-09');
    INSERT INTO CUSTOMER VALUES(1108, 'JISHA DAS', 'TRIKARIPUR TOWN', '2022-03-20');
    INSERT INTO CUSTOMER VALUES(1109, 'ZANOOBA', 'WHITE HOUSE, WAYANAD', '2023-01-08');
    INSERT INTO CUSTOMER VALUES(1110, 'SAI KUMAR', 'A10 ROAD, TRISUR', '2024-03-01');
    INSERT INTO CUSTOMER VALUES(1111, 'PALLAVI', 'NAYAKS STREET, PUTHUR', '2022-06-24');
	INSERT INTO CUSTOMER VALUES(1112, 'BIDAR AHMED', 'EAST TALANGARA', '2021-01-17');
	INSERT INTO CUSTOMER VALUES(1113,'SHAHID', '760 ANNA STREET', '2020-11-13');
SELECT * FROM CUSTOMER;
    
CREATE TABLE ISSUESTATUS (ISSUE_ID INT PRIMARY KEY,
ISSUED_CUST INT,
ISSUED_BOOK_NAME VARCHAR(50),
ISSUE_DATE DATE,
ISBN_BOOK VARCHAR(50),
foreign key (ISSUED_CUST) references CUSTOMER(CUSTOMER_ID),
foreign key (ISBN_BOOK) references BOOKS(ISBN));
	INSERT INTO ISSUESTATUS VALUES(1, 1103, 'FIVE POINT SOMEONE', '2023-06-14', '123-45-678');
    INSERT INTO ISSUESTATUS VALUES(2, 1102, 'LIKE IT HAPPENED YESTERDAY', '2023-06-23', '908-23-088');
    INSERT INTO ISSUESTATUS VALUES(3, 1106, 'IKIGAI', '2023-05-11', '234-98-602');
    INSERT INTO ISSUESTATUS VALUES(4, 1105, 'EVERY TIME IT RAINS', '2022-12-26', '769-09-651');
    INSERT INTO ISSUESTATUS VALUES(5, 1107, 'FIVE POINT SOMEONE', '2023-01-19', '123-45-678');
SELECT * FROM ISSUESTATUS;

CREATE TABLE RETURNSTATUS (RETURN_ID INT PRIMARY KEY,
RETURN_CUST INT,
RETURN_BOOK_NAME VARCHAR(50),
RETURN_DATE DATE,
ISBN_BOOK2 VARCHAR(50),
foreign key (ISBN_BOOK2) references BOOKS(ISBN));
	INSERT INTO RETURNSTATUS VALUES (100, 1107, 'FIVE POINT SOMEONE', '2023-02-19', '123-45-678');
    INSERT INTO RETURNSTATUS VALUES (101, 1105, 'EVERY TIME IT RAINS', '2023-01-26', '769-09-651');
    INSERT INTO RETURNSTATUS VALUES (102, 1106, 'IKIGAI', '2023-06-11', '234-98-602');
    INSERT INTO RETURNSTATUS VALUES (103, 1102, 'LIKE IT HAPPENED YESTERDAY', '2023-03-23', '908-23-088');
    INSERT INTO RETURNSTATUS VALUES (104, 1103, 'FIVE POINT SOMEONE', '2023-07-20', '123-45-678');
SELECT * FROM RETURNSTATUS;

			 -- QUESTION --

-- 1,  Retrieve the book title, category, and rental price of all available books. 
	SELECT BOOK_TITLE, CATEGORY, RENTAL_PRICE FROM BOOKS;

			-- QUESTION --

-- 2,  List the employee names and their respective salaries in descending order of salary. 
SELECT EMP_ID, EMP_NAME, SALARY FROM EMPLOYEE order by SALARY DESC;

			-- QUESTION --

-- 3, Retrieve the book titles and the corresponding customers who have issued those books. 
	SELECT B.BOOK_TITLE, C.CUSTOMER_NAME FROM BOOKS B INNER JOIN ISSUESTATUS I ON B.ISBN = I.ISBN_BOOK
		INNER JOIN CUSTOMER C ON I.ISSUED_CUST = C.CUSTOMER_ID;
        
        -- QUESTION --
    
-- 4, Display the total count of books in each category.
	SELECT CATEGORY, COUNT(BOOK_TITLE) AS 'No. of Books' FROM BOOKS group by CATEGORY;

        -- QUESTION --

-- 5, Retrieve the employee names and their positions for the employees whose salaries are above Rs.50,000.
	SELECT EMP_ID, EMP_NAME, POSITION, SALARY FROM EMPLOYEE WHERE SALARY > 50000;
    
		-- QUESTION --

-- 6, List the customer names who registered before 2022-01-01 and have not issued any books yet. 
	SELECT C.CUSTOMER_NAME, C.REG_DATE, I.ISSUED_CUST FROM CUSTOMER C LEFT JOIN ISSUESTATUS I ON C.CUSTOMER_ID = I.ISSUED_CUST 
		WHERE C.REG_DATE < '2022-01-01' AND I.ISSUED_CUST IS NULL;

        -- QUESTION --

-- 7,  Display the branch numbers and the total count of employees in each branch. 
	SELECT BRANCH_NO, COUNT(*) AS 'EMP_COUNT' FROM EMPLOYEE group by BRANCH_NO;

        -- QUESTION --

-- 8, Display the names of customers who have issued books in the month of June 2023.
	SELECT distinct C.CUSTOMER_NAME FROM CUSTOMER C INNER JOIN ISSUESTATUS I ON CUSTOMER_ID = I.ISSUED_CUST WHERE
	I.ISSUE_DATE BETWEEN '2023-06-01' AND '2023-06-30';
    
           -- QUESTION --
    
-- 9, Retrieve book_title from book table containing history. 
	SELECT BOOK_TITLE, CATEGORY FROM BOOKS WHERE CATEGORY = 'HISTORY';

           -- QUESTION --
           
-- 10, Retrieve the branch numbers along with the count of employees for branches having more than 5 employees
	SELECT BRANCH_NO, COUNT(*) AS 'COUNT OF EMPLOYEE' FROM EMPLOYEE group by BRANCH_NO HAVING COUNT(*) > 5;

          -- QUESTION --
          
-- 11,  Retrieve the names of employees who manage branches and their respective branch addresses.
	SELECT E.EMP_NAME, B.BRANCH_NO, B.BRANCH_ADDRESS FROM EMPLOYEE E INNER JOIN BRANCH B ON E.EMP_ID = B.MANAGER_ID;

         -- QUESTION --
         
-- 12, Display the names of customers who have issued books with a rental price higher than Rs. 25.
	SELECT DISTINCT C.CUSTOMER_NAME FROM CUSTOMER C INNER JOIN ISSUESTATUS I ON C.CUSTOMER_ID = I.ISSUED_CUST INNER JOIN BOOKS B ON 
		I.ISBN_BOOK = B.ISBN WHERE B.RENTAL_PRICE > 25;